#
# .travis.yaml contains YAML-formatted (http://www.yaml.org/) build
# instructions for continuous integration via Travis CI
# (http://docs.travis-ci.com/).
#

notifications:
    email: false

language: c

compiler:
    - gcc
    - g++

env:
    matrix:
        # Linux x86, release
        - OS_ID=0.4.4 REL=1
        # Linux x64, debug
        - OS_ID=0.4.40
        # Linux x64, release
        - OS_ID=0.4.40 REL=1

        # Windows x86, release
        - OS_ID=0.3.1 REL=1 TOOLS=i686-w64-mingw32-
        # Windows x64, release
        - OS_ID=0.3.40 REL=1 TOOLS=x86_64-w64-mingw32-

# Force new container-based infrastructure.
# Ref: http://docs.travis-ci.com/user/migrating-from-legacy/
sudo: false

addons:
    apt:
        packages:
            # For building 32b binaries on a 64b host (not necessary when we
            # build for 64b):
            - gcc-multilib
            - g++-multilib

            # For running the 32b bootstrap rebol ("r3-make") on a 64b host:
            - libc6:i386

            # For cross-compiling to Windows.
            - binutils-mingw-w64-i686
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-i686
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-i686
            - g++-mingw-w64-x86-64
            - mingw-w64


install:
    # Fetch a Rebol bootstrap binary, which is needed for building Rebol.
    - wget http://www.rebol.com/r3/downloads/r3-a111-4-2.tar.gz
    - tar xvzf r3-a111-4-2.tar.gz
    - cp r3 make/r3-make

script:
    - cd make/
    # If REL is defined and not empty, we do a release build by compiling with
    # NDEBUG defined. (`${parameter+alt_value}` is a Bash-ism documented as:
    # "if parameter set, use alt_value, else use null string.")
    - export CC="${TOOLS}${CC}${REL+ -DNDEBUG}"
    # We have to set REBOL_TOOL explicitly to circumvent the automatic r3-make
    # filename inference, as we always use a Linux r3-make, even when
    # cross-compiling to Windows.
    - make -f makefile.boot REBOL_TOOL=r3-make OS_ID="${OS_ID}" CC="${CC}"
    # A minimal sanity check that the built R3 does _something_. Eventually, we
    # should run the full test suite.

    # Run once but don't pipe output, in case it prints out useful crash msg
    - if [ "${OS_ID}" = "0.4.40" ]; then ./r3 --do 'print {OK}'; fi

    # Run a second time with piped output to return success/faiure to Travis
    - if [ "${OS_ID}" = "0.4.40" ]; then ./r3 --do 'print {OK}' | grep OK; fi

deploy:
  provider: s3
  # these are set up in the global env
  access_key_id: 
    secure: "diKRFiA8thk1bqaNQN1+hBMGv9aHWTMk82NYrHmxifrlxVKxMAuLxZqDCNTH/oF9w7fszVPdOyscP770KGI/XAdO9VTTjFJ4tVzcM7lyDDonGdO8pykyBKDq2WM7XQPa/28Em6mv7h1zqLhRMKZiQDyhIi+KczWaMNSuFW0fj1Ne/pDqWPQBIps+deTESDeypl1KD5RxczYEl2QuNkwlydg0J6gP28httMxPUC9DKIDUYbkmNMczayZRHjTLTfASnlO3YhNWg4o4YfLuDZz2ZSMt2qSX5eNfi7byQ2zjWwIpeslICm2uTepRje+rVnmeC5TqlPIzaKZF8fAo8tdAfswrmSBYvQMYyiExRvMRQ2WLjZfpkQZuG0F/3fap4heYirf0zf9k/O5VJWZte+1EgdlEM9gNyK3ot/KFLOu2gdlk7wnCs5nYrV3FUD69kY8hK+WL1aQbZGkoaX1IgE1KGKaJd8Qu/TRNxJgyAaCGGOhSKO+FXfJ+9kcp2edEEesxvDWO8EAIKnClzLT0zYYbUU2PFnclFyG5DpqRGCr5qEGMqjs440cmBQ9ZAD5LeO+7Tp9ajggdrlaPffqKm7O0S1pJaw/AlCJ5jx7YtzE8/WHQImoTPpJCxihk9WbwFo2fqG9MYy4u2woQ77gK6ydqqCDMF4GrQ95OCctnojo00XI="
  secret_access_key: 
    secure: "HwVA+GCLkcpyMKeTeRwjm9rb/2axiOypM0OEqqb6rZNRNbs4hTpdfZwbsYrgJGt3pC13zas4WhDBY46g51cLsMg/LyAbrxRKKuVEXjOGt4ErK+SUKlkoT81xsmetA1o3MSm3TPSTZ5wJ9frpjV08bbeMrxSrsjfR/ZfZbkarE+rZqzkTF1lyx8tpkWo5h8hlR9a/x8tjAjUgNItWNR68+hG7lv3tHkriadhB9wPh+aYppnvJG6uCASxdsbqTmbup5lyHRzS68yhMOIgsTpx9mbxU60rgMIYAW2TNZ+EJzQ4hmEF/e0DDz1pY0MC8P8FTQjCJQMUrlcaXbNHIEeExvZ6QHOPuIdPBz9oqob8EJdmoM3l4zhogqRVoJsjTKs5NqJ7yfi0aGFKI35wkphaXmDxP7d0Dul0XHB9AP8q0nLd1UjWd5GcXgMP6Nicx8MY1VvKjT6u5NTHn3d2uWV1Eo4000fe/eVxZuTKpjixBiVOCyU2wpmf/w/IxITfizcwvC6kH2O7WGjJ/Sp2+6H1EwAHxoty92xrcXorBwPMl/xttqwL+jPL19fuo26a55JVDlxQFyuviXL/IeqUQaALC9BiBlSh8f52niOInqvFsQu1fIV5d0dMTT8QhjOsDoS43j+nDDCng6PxuBZdKEFjEHpAAfzwkJevknZyWXfxQWZE="
  bucket: "metaeducation"
  skip_cleanup: true
  upload-dir: travis-builds
